# Generated by Django 4.0.5 on 2022-06-07 07:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер телефона')),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='Логин')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Почта')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('first_join', models.BooleanField(default=True)),
                ('verify_email', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('us', 'Пользователь'), ('st', 'Сотрудник'), ('adm', 'Администратор')], default=0, max_length=255, verbose_name='Статус')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название адреса')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('entrance', models.IntegerField(verbose_name='Подъезд')),
                ('floor', models.IntegerField(verbose_name='Этаж')),
                ('apartment', models.IntegerField(verbose_name='Кватрира')),
                ('code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Код домофона')),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
            },
        ),
        migrations.CreateModel(
            name='VerifyCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20, verbose_name='Номер телефона')),
                ('code', models.IntegerField(blank=True, null=True, verbose_name='Код')),
            ],
            options={
                'verbose_name': 'Код верификации',
                'verbose_name_plural': 'Коды верификации',
            },
        ),
        migrations.CreateModel(
            name='MileOneAir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=100, verbose_name='Номер телефона')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Карта лояльности',
                'verbose_name_plural': 'Карты лояльности',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Фамилия')),
                ('first_name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, max_length=500, null=True, verbose_name='Отчество')),
                ('series_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Серия и номер')),
                ('date_get', models.DateField(blank=True, null=True, verbose_name='Дата выдачи')),
                ('how_get', models.CharField(blank=True, max_length=255, null=True, verbose_name='Кем выдан')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('first_scan', models.ImageField(blank=True, null=True, upload_to='documents', verbose_name='Певый скан')),
                ('second_scan', models.ImageField(blank=True, null=True, upload_to='documents', verbose_name='Второй скан')),
                ('type_doc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Тип документа')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Личные данные',
                'verbose_name_plural': 'Личные данные',
            },
        ),
        migrations.CreateModel(
            name='AddressList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addresses', models.ManyToManyField(to='lostitems.address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='list_user', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Список адресов',
                'verbose_name_plural': 'Списки адресов',
            },
        ),
    ]
